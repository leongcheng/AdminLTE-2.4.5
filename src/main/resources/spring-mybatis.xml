<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.3.xsd">

    <util:properties id="cfg" location="classpath:configs.properties"/>
    <!-- 整合Druid连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close" lazy-init="false">
        <property name="DriverClassName" value="#{cfg.jdbcDriver}"/>
        <property name="Url" value="#{cfg.jdbcUrl}"/>
        <property name="Username" value="#{cfg.jdbcUser}"/>
        <property name="Password" value="#{cfg.jdbcPassword}"/>
    </bean>
    <!--整合SqlSesionFactoryBean对象(通过此对象创建SqlSessionFactory)  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="DataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
    </bean>
    <!-- 配置dao接口扫描，底层会基于dao接口创建这个接口的代理对象，这个代理
         对象内部会通过mybatis访问数据库 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.db.ssm.dao"/>
        <property name="SqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>





